name: Deploy to Azure

on:
  push:
    branches:
      - '**' # Trigger on any push to any branch
    paths:
      - 'tf/group1/**' # Trigger only on changes to Terraform files
      - '.github/workflows/infra_deploy.yaml' # Trigger if this workflow file changes
  pull_request:
    branches:
      - '**' # Trigger on any pull request
    paths:
      - 'tf/group1/**' # Trigger only on changes to Terraform files
      - '.github/workflows/infra_deploy.yaml' # Trigger if this workflow file changes
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (sand/prod)'
        required: true
        default: 'sand'
        type: choice
        options:
          - sand
          - prod
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./tf/group1

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.0

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        allow-no-subscriptions: true

    - name: Check if Encrypted State File Exists
      id: check_state
      run: |
        if [ -f terraform.tfstate.enc ]; then
          echo "state_exists=true" >> $GITHUB_ENV
        else
          echo "state_exists=false" >> $GITHUB_ENV
        fi
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Decrypt Terraform State
      if: env.state_exists == 'true'
      run: |
        echo "${{ secrets.ENCRYPTION_KEY }}" > encryption_key.txt
        openssl enc -d -aes-256-cbc -in terraform.tfstate.enc -out terraform.tfstate -pass file:./encryption_key.txt
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Initialize Empty Terraform State
      if: env.state_exists == 'false'
      run: |
        echo "{}" > terraform.tfstate
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Encrypt and Commit Terraform State
      run: |
        openssl enc -aes-256-cbc -salt -in terraform.tfstate -out terraform.tfstate.enc -pass file:./encryption_key.txt
        git config --global user.email "vibhuanand@outlook.com"
        git config --global user.name "GitHub Actions"
        git add terraform.tfstate.enc
        git commit -m "Update encrypted Terraform state" || echo "No changes to commit"
        git push
      working-directory: ${{ env.WORKING_DIRECTORY }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
